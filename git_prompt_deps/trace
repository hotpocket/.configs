++ eval 'test $GIT_CHANGED != "0"'
+++ test 0 '!=' 0
++ __chk_gitvar_status UNTRACKED '!= "0"'
++ local v
++ [[ x!= "0" == \x\-\n ]]
++ v='$GIT_UNTRACKED != "0"'
++ eval 'test $GIT_UNTRACKED != "0"'
+++ test 0 '!=' 0
++ __chk_gitvar_status STASHED '!= "0"'
++ local v
++ [[ x!= "0" == \x\-\n ]]
++ v='$GIT_STASHED != "0"'
++ eval 'test $GIT_STASHED != "0"'
+++ test 0 '!=' 0
++ __chk_gitvar_status CLEAN '= "1"' -
++ local v
++ [[ x= "1" == \x\-\n ]]
++ v='$GIT_CLEAN = "1"'
++ eval 'test $GIT_CLEAN = "1"'
+++ test 1 = 1
++ [[ 3 -lt 2 ]]
++ [[ - != \- ]]
++ __add_status '$GIT_PROMPT_CLEAN$ResetColor'
++ eval 'STATUS="|$GIT_PROMPT_CLEAN$ResetColor"'
+++ STATUS='|\[\033[1;32m\]✔\[\033[0;0m\]'
++ __add_status '\[\033[0;0m\]]'
++ eval 'STATUS="|\[\033[1;32m\]✔\[\033[0;0m\]\[\033[0;0m\]]"'
+++ STATUS='|\[\033[1;32m\]✔\[\033[0;0m\]\[\033[0;0m\]]'
+++ gp_add_virtualenv_to_prompt
+++ local ACCUMULATED_VENV_PROMPT=
+++ local VENV=
+++ [[ -n '' ]]
+++ [[ -n '' ]]
+++ [[ -n '' ]]
+++ echo ''
+++ prompt_callback_default
+++ return
++ NEW_PROMPT='_LAST_COMMAND_INDICATOR_ \[\033[0;33m\]\w\[\033[0;0m\] [\[\033[0;35m\]${GIT_BRANCH}\[\033[0;0m\]|\[\033[1;32m\]✔\[\033[0;0m\]\[\033[0;0m\]] \n\[\033[0;37m\]$(date +%H:%M)\[\033[0;0m\] $ '
++ command rm /tmp/git-index-private21615
┌[brandon@Xeon-Desktop] [192.168.1.198] [Wed Feb 07 17:02] [master|✔]: ~/git/.configs/git_prompt_deps 
└>clear
+ clear

++ setLastCommandState
++ GIT_PROMPT_LAST_COMMAND_STATE=0
++ _pyenv_virtualenv_hook
++ local ret=0
++ '[' -n '' ']'
+++ pyenv sh-activate --quiet
+++ local command
+++ command=sh-activate
+++ '[' 2 -gt 0 ']'
+++ shift
+++ case "$command" in
+++ command pyenv sh-activate --quiet
+++ pyenv sh-activate --quiet
+++ true
++ eval false
+++ false
++ true
++ return 0
++ history -a
++ . /home/brandon/git/.configs/.fancy_prompt
+++ red='\e[0;31m'
+++ RED='\e[1;31m'
+++ green='\e[0;32m'
+++ GREEN='\e[1;32m'
+++ yellow='\e[0;33m'
+++ YELLOW='\e[1;33m'
+++ blue='\e[0;34m'
+++ BLUE='\e[1;34m'
+++ cyan='\e[0;36m'
+++ CYAN='\e[1;36m'
+++ NC='\e[0m'
+++ DATE='\D{%a %b %d %k:%M}'
+++ '[' -z '┌[\e[0;32m\u@\H\e[0m] [192.168.1.198] [\D{%a %b %d %k:%M}] [\[\033[0;35m\]${GIT_BRANCH}\[\033[0;0m\]|\[\033[1;32m\]✔\[\033[0;0m\]\[\033[0;0m\]]: \e[0;32m\w\e[0m \n└>' ']'
+++ HISTCONTROL=ignoredups:ignorespace
+++ shopt -s histappend
+++ HISTSIZE=1000
+++ HISTFILESIZE=2000
+++ shopt -s checkwinsize
+++ complete -cf sudo
+++ '[' -x /usr/bin/lesspipe ']'
++++ SHELL=/bin/sh
++++ lesspipe
+++ eval 'export LESSOPEN="| /usr/bin/lesspipe %s";
export LESSCLOSE="/usr/bin/lesspipe %s %s";'
++++ export 'LESSOPEN=| /usr/bin/lesspipe %s'
++++ LESSOPEN='| /usr/bin/lesspipe %s'
++++ export 'LESSCLOSE=/usr/bin/lesspipe %s %s'
++++ LESSCLOSE='/usr/bin/lesspipe %s %s'
+++ '[' -n '' ']'
++++ type ip
+++++ ip route get 8.8.8.8
+++++ awk '{print $NF; exit}'
++++ echo 192.168.1.198
+++ THEIP=192.168.1.198
+++ '[' -z 192.168.1.198 ']'
+++ export PYENV_VIRTUALENV_DISABLE_PROMPT=1
+++ PYENV_VIRTUALENV_DISABLE_PROMPT=1
+++ PY_VENV=
+++ '[' -n '' ']'
++++ pyenv virtualenvs
++++ grep --color=auto '^*'
++++ sed -E 's/\* (\w*).*/\1/'
++++ local command
++++ command=virtualenvs
++++ '[' 1 -gt 0 ']'
++++ shift
++++ case "$command" in
++++ command pyenv virtualenvs
++++ pyenv virtualenvs
+++ PY_VENV_AUTO=
+++ '[' -n '' ']'
+++ GIT_STATUS=
++++ we_are_on_repo
+++++ git rev-parse --git-dir
++++ [[ -e /home/brandon/git/.configs/.git ]]
++++ echo 1
++++ return
+++ [[ 1 = \1 ]]
+++ gp_install_prompt
+++ '[' -z '┌[\e[0;32m\u@\H\e[0m] [192.168.1.198] [\D{%a %b %d %k:%M}] [\[\033[0;35m\]${GIT_BRANCH}\[\033[0;0m\]|\[\033[0;34m\]✚ 1\[\033[0;0m\]\[\033[0;0m\]]: \e[0;32m\w\e[0m \n└>' ']'
+++ '[' -z 1 ']'
+++ '[' -z 'setLastCommandState;_pyenv_virtualenv_hook;history -a && . ~/git/.configs/.fancy_prompt;setGitPrompt' ']'
+++ PROMPT_COMMAND='setLastCommandState;_pyenv_virtualenv_hook;history -a && . ~/git/.configs/.fancy_prompt;setGitPrompt'
+++ PROMPT_COMMAND='setLastCommandState;_pyenv_virtualenv_hook;history -a && . ~/git/.configs/.fancy_prompt;setGitPrompt'
+++ local new_entry=setGitPrompt
+++ case ";$PROMPT_COMMAND;" in
+++ :
+++ local setLastCommandStateEntry=setLastCommandState
+++ case ";$PROMPT_COMMAND;" in
+++ :
+++ git_prompt_dir
+++ '[' -z /home/brandon/git/.configs/git_prompt_deps ']'
+++ source /home/brandon/git/.configs/git_prompt_deps/git-prompt-help.sh
++++ printPrompt
++++ local LAST_COMMAND_INDICATOR
++++ local PROMPT_LEADING_SPACE
++++ local PROMPT_START
++++ local PROMPT_END
++++ local EMPTY_PROMPT
++++ local 'Blue=\[\033[0;34m\]'
++++ git_prompt_config
++++ _isroot=false
++++ [[ 1000 -eq 0 ]]
++++ git_prompt_load_colors
++++ gp_set_file_var __PROMPT_COLORS_FILE prompt-colors.sh
++++ local envar=__PROMPT_COLORS_FILE
++++ local file=prompt-colors.sh
++++ eval '[[ -n "$__PROMPT_COLORS_FILE" && -r "$__PROMPT_COLORS_FILE" ]]'
+++++ [[ -n /home/brandon/git/.configs/git_prompt_deps/prompt-colors.sh ]]
+++++ [[ -r /home/brandon/git/.configs/git_prompt_deps/prompt-colors.sh ]]
++++ local basefile
++++ eval 'basefile="`basename \"$__PROMPT_COLORS_FILE\"`"'
++++++ basename /home/brandon/git/.configs/git_prompt_deps/prompt-colors.sh
+++++ basefile=prompt-colors.sh
++++ [[ prompt-colors.sh = \p\r\o\m\p\t\-\c\o\l\o\r\s\.\s\h ]]
++++ return 0
++++ source /home/brandon/git/.configs/git_prompt_deps/prompt-colors.sh
+++++ [[ 8 = 0 ]]
+++++ [[ -z \[\033[0;90m\] ]]
+++++ [[ -z \[\033[0;0m\] ]]
++++ git_prompt_load_theme
++++ get_theme
++++ local CUSTOM_THEME_FILE=/home/brandon/.git-prompt-colors.sh
++++ [[ -z '' ]]
++++ local DEFAULT_THEME_FILE=/home/brandon/git/.configs/git_prompt_deps/themes/Default.bgptheme
++++ [[ -z Default ]]
++++ [[ Default = \C\u\s\t\o\m ]]
++++ local theme=
++++ for themefile in '"${__GIT_PROMPT_DIR}/themes/"*.bgptheme'
++++ local basename=Default.bgptheme
++++ [[ Default = \D\e\f\a\u\l\t ]]
++++ theme=Default
++++ break
++++ [[ Default = '' ]]
++++ __GIT_PROMPT_THEME_FILE=/home/brandon/git/.configs/git_prompt_deps/themes/Default.bgptheme
++++ local DEFAULT_THEME_FILE=/home/brandon/git/.configs/git_prompt_deps/themes/Default.bgptheme
++++ source /home/brandon/git/.configs/git_prompt_deps/themes/Default.bgptheme
+++++ [[ Default == \D\e\f\a\u\l\t ]]
+++++ [[ Default != \D\e\f\a\u\l\t ]]
++++ source /home/brandon/git/.configs/git_prompt_deps/themes/Default.bgptheme
+++++ [[ Default == \D\e\f\a\u\l\t ]]
+++++ [[ Default != \D\e\f\a\u\l\t ]]
++++ is_function prompt_callback
++++ declare -Ff prompt_callback
++++ prompt_callback=prompt_callback_default
++++ [[ 0 = \0 ]]
++++ LAST_COMMAND_INDICATOR='\[\033[0;32m\]✔'
+++++ gp_format_exit_status 0
+++++ local RETVAL=0
+++++ local SIGNAL
+++++ '[' 0 -gt 128 ']'
+++++ echo 0
++++ GIT_PROMPT_LAST_COMMAND_STATE=0
++++ LAST_COMMAND_INDICATOR='\[\033[0;32m\]✔'
++++ [[ -z '' ]]
++++ [[ -z '' ]]
++++ false
++++ PROMPT_START='_LAST_COMMAND_INDICATOR_ \[\033[0;33m\]\w\[\033[0;0m\]'
++++ [[ -z '' ]]
++++ false
++++ PROMPT_END=' \n\[\033[0;37m\]$(date +%H:%M)\[\033[0;0m\] $ '
++++ [[ '' = 0 ]]
++++ PROMPT_LEADING_SPACE=' '
++++ [[ '' = 1 ]]
+++++ gp_add_virtualenv_to_prompt
+++++ local ACCUMULATED_VENV_PROMPT=
+++++ local VENV=
+++++ [[ -n '' ]]
+++++ [[ -n '' ]]
+++++ [[ -n '' ]]
+++++ echo ''
+++++ prompt_callback_default
+++++ return
++++ local 'ps=_LAST_COMMAND_INDICATOR_ \[\033[0;33m\]\w\[\033[0;0m\] \n\[\033[0;37m\]$(date +%H:%M)\[\033[0;0m\] $ '
++++ EMPTY_PROMPT='\[\033[0;32m\]✔ \[\033[0;33m\]\w\[\033[0;0m\] \n\[\033[0;37m\]$(date +%H:%M)\[\033[0;0m\] $ '
++++ [[ -z 5 ]]
++++ [[ -z '' ]]
++++ git_prompt_dir
++++ '[' -z /home/brandon/git/.configs/git_prompt_deps ']'
++++ gp_maybe_set_envar_to_path __GIT_STATUS_CMD /home/brandon/git/.configs/git_prompt_deps/gitstatus.sh
++++ local envar=__GIT_STATUS_CMD
++++ shift
++++ local file
++++ for file in '"$@"'
++++ [[ -r /home/brandon/git/.configs/git_prompt_deps/gitstatus.sh ]]
++++ eval '__GIT_STATUS_CMD="/home/brandon/git/.configs/git_prompt_deps/gitstatus.sh"'
+++++ __GIT_STATUS_CMD=/home/brandon/git/.configs/git_prompt_deps/gitstatus.sh
++++ return 0
++++ unset GIT_BRANCH
++++ export __GIT_PROMPT_IGNORE_STASH=
++++ __GIT_PROMPT_IGNORE_STASH=
++++ export __GIT_PROMPT_SHOW_UPSTREAM=
++++ __GIT_PROMPT_SHOW_UPSTREAM=
++++ export __GIT_PROMPT_IGNORE_SUBMODULES=
++++ __GIT_PROMPT_IGNORE_SUBMODULES=
++++ '[' -z '' ']'
++++ export __GIT_PROMPT_SHOW_UNTRACKED_FILES=all
++++ __GIT_PROMPT_SHOW_UNTRACKED_FILES=all
++++ '[' -z '' ']'
++++ export __GIT_PROMPT_SHOW_CHANGED_FILES_COUNT=1
++++ __GIT_PROMPT_SHOW_CHANGED_FILES_COUNT=1
+++++ createPrivateIndex
+++++ local __GIT_INDEX_FILE
+++++ local __GIT_INDEX_PRIVATE
+++++ [[ -z '' ]]
++++++ git rev-parse --git-dir
+++++ __GIT_INDEX_FILE=/home/brandon/git/.configs/.git/index
+++++ __GIT_INDEX_PRIVATE=/tmp/git-index-private21615
+++++ command cp /home/brandon/git/.configs/.git/index /tmp/git-index-private21615
+++++ echo /tmp/git-index-private21615
++++ local GIT_INDEX_PRIVATE=/tmp/git-index-private21615
++++ local GIT_INDEX_FILE
++++ export GIT_INDEX_FILE=/tmp/git-index-private21615
++++ GIT_INDEX_FILE=/tmp/git-index-private21615
++++ local -a git_status_fields
++++ git_status_fields=($("$__GIT_STATUS_CMD" 2>/dev/null))
+++++ /home/brandon/git/.configs/git_prompt_deps/gitstatus.sh
+++++ replaceSymbols master
+++++ set -f
+++++ [[ -z L ]]
+++++ local VALUE=master
+++++ local VALUE1=master
+++++ local VALUE2=master
+++++ echo master
+++++ set +f
++++ export GIT_BRANCH=master
++++ GIT_BRANCH=master
+++++ replaceSymbols .
+++++ set -f
+++++ [[ -z L ]]
+++++ local VALUE=.
+++++ local VALUE1=.
+++++ local VALUE2=.
+++++ echo .
+++++ set +f
++++ local GIT_REMOTE=.
++++ [[ . == \. ]]
++++ unset GIT_REMOTE
++++ local GIT_UPSTREAM_PRIVATE=origin/master
++++ [[ -z '' ]]
++++ unset GIT_UPSTREAM
++++ local GIT_STAGED=0
++++ local GIT_CONFLICTS=0
++++ local GIT_CHANGED=0
++++ local GIT_UNTRACKED=0
++++ local GIT_STASHED=0
++++ local GIT_CLEAN=1
++++ local 'NEW_PROMPT=\[\033[0;32m\]✔ \[\033[0;33m\]\w\[\033[0;0m\] \n\[\033[0;37m\]$(date +%H:%M)\[\033[0;0m\] $ '
++++ [[ -n master ]]
++++ case "$GIT_BRANCH" in
++++ local 'STATUS_PREFIX= [\[\033[0;35m\]${GIT_BRANCH}\[\033[0;0m\]'
++++ local STATUS=
++++ __chk_gitvar_status REMOTE -n
++++ local v
++++ [[ x-n == \x\-\n ]]
++++ v='-n "$GIT_REMOTE"'
++++ eval 'test -n "$GIT_REMOTE"'
+++++ test -n ''
++++ [[ 1 -eq 0 ]]
++++ [[ \[\033[1;32m\]✔ != '' ]]
++++ __add_status '|'
++++ eval 'STATUS="|"'
+++++ STATUS='|'
++++ __chk_gitvar_status STAGED '!= "0" -a $GIT_STAGED != "^"'
++++ local v
++++ [[ x!= "0" -a $GIT_STAGED != "^" == \x\-\n ]]
++++ v='$GIT_STAGED != "0" -a $GIT_STAGED != "^"'
++++ eval 'test $GIT_STAGED != "0" -a $GIT_STAGED != "^"'
+++++ test 0 '!=' 0 -a 0 '!=' '^'
++++ __chk_gitvar_status CONFLICTS '!= "0"'
++++ local v
++++ [[ x!= "0" == \x\-\n ]]
++++ v='$GIT_CONFLICTS != "0"'
++++ eval 'test $GIT_CONFLICTS != "0"'
+++++ test 0 '!=' 0
++++ __chk_gitvar_status CHANGED '!= "0"'
++++ local v
++++ [[ x!= "0" == \x\-\n ]]
++++ v='$GIT_CHANGED != "0"'
++++ eval 'test $GIT_CHANGED != "0"'
+++++ test 0 '!=' 0
++++ __chk_gitvar_status UNTRACKED '!= "0"'
++++ local v
++++ [[ x!= "0" == \x\-\n ]]
++++ v='$GIT_UNTRACKED != "0"'
++++ eval 'test $GIT_UNTRACKED != "0"'
+++++ test 0 '!=' 0
++++ __chk_gitvar_status STASHED '!= "0"'
++++ local v
++++ [[ x!= "0" == \x\-\n ]]
++++ v='$GIT_STASHED != "0"'
++++ eval 'test $GIT_STASHED != "0"'
+++++ test 0 '!=' 0
++++ __chk_gitvar_status CLEAN '= "1"' -
++++ local v
++++ [[ x= "1" == \x\-\n ]]
++++ v='$GIT_CLEAN = "1"'
++++ eval 'test $GIT_CLEAN = "1"'
+++++ test 1 = 1
++++ [[ 3 -lt 2 ]]
++++ [[ - != \- ]]
++++ __add_status '$GIT_PROMPT_CLEAN$ResetColor'
++++ eval 'STATUS="|$GIT_PROMPT_CLEAN$ResetColor"'
+++++ STATUS='|\[\033[1;32m\]✔\[\033[0;0m\]'
++++ __add_status '\[\033[0;0m\]]'
++++ eval 'STATUS="|\[\033[1;32m\]✔\[\033[0;0m\]\[\033[0;0m\]]"'
+++++ STATUS='|\[\033[1;32m\]✔\[\033[0;0m\]\[\033[0;0m\]]'
+++++ gp_add_virtualenv_to_prompt
+++++ local ACCUMULATED_VENV_PROMPT=
+++++ local VENV=
+++++ [[ -n '' ]]
+++++ [[ -n '' ]]
+++++ [[ -n '' ]]
+++++ echo ''
+++++ prompt_callback_default
+++++ return
++++ NEW_PROMPT='_LAST_COMMAND_INDICATOR_ \[\033[0;33m\]\w\[\033[0;0m\] [\[\033[0;35m\]${GIT_BRANCH}\[\033[0;0m\]|\[\033[1;32m\]✔\[\033[0;0m\]\[\033[0;0m\]] \n\[\033[0;37m\]$(date +%H:%M)\[\033[0;0m\] $ '
++++ echo ' [\[\033[0;35m\]${GIT_BRANCH}\[\033[0;0m\]|\[\033[1;32m\]✔\[\033[0;0m\]\[\033[0;0m\]]'
++++ command rm /tmp/git-index-private21615
+++ GIT_STATUS=' [\[\033[0;35m\]${GIT_BRANCH}\[\033[0;0m\]|\[\033[1;32m\]✔\[\033[0;0m\]\[\033[0;0m\]]'
++++ id -u
+++ '[' 1000 -eq 0 ']'
+++ PS1='┌[\e[0;32m\u@\H\e[0m] [192.168.1.198] [\D{%a %b %d %k:%M}] [\[\033[0;35m\]${GIT_BRANCH}\[\033[0;0m\]|\[\033[1;32m\]✔\[\033[0;0m\]\[\033[0;0m\]]: \e[0;32m\w\e[0m \n└>'
++ setGitPrompt
++ update_old_git_prompt
+++ we_are_on_repo
++++ git rev-parse --git-dir
+++ [[ -e /home/brandon/git/.configs/.git ]]
+++ echo 1
+++ return
++ local in_repo=1
++ [[ 1 = 0 ]]
++ GIT_PROMPT_OLD_DIR_WAS_GIT=1
+++ git rev-parse --show-toplevel
++ local repo=/home/brandon/git/.configs
++ [[ ! -e /home/brandon/git/.configs ]]
++ local EMPTY_PROMPT
++ local __GIT_STATUS_CMD
++ git_prompt_config
++ _isroot=false
++ [[ 1000 -eq 0 ]]
++ git_prompt_load_colors
++ gp_set_file_var __PROMPT_COLORS_FILE prompt-colors.sh
++ local envar=__PROMPT_COLORS_FILE
++ local file=prompt-colors.sh
++ eval '[[ -n "$__PROMPT_COLORS_FILE" && -r "$__PROMPT_COLORS_FILE" ]]'
+++ [[ -n /home/brandon/git/.configs/git_prompt_deps/prompt-colors.sh ]]
+++ [[ -r /home/brandon/git/.configs/git_prompt_deps/prompt-colors.sh ]]
++ local basefile
++ eval 'basefile="`basename \"$__PROMPT_COLORS_FILE\"`"'
++++ basename /home/brandon/git/.configs/git_prompt_deps/prompt-colors.sh
+++ basefile=prompt-colors.sh
++ [[ prompt-colors.sh = \p\r\o\m\p\t\-\c\o\l\o\r\s\.\s\h ]]
++ return 0
++ source /home/brandon/git/.configs/git_prompt_deps/prompt-colors.sh
+++ [[ 8 = 0 ]]
+++ [[ -z \[\033[0;90m\] ]]
+++ [[ -z \[\033[0;0m\] ]]
++ git_prompt_load_theme
++ get_theme
++ local CUSTOM_THEME_FILE=/home/brandon/.git-prompt-colors.sh
++ [[ -z '' ]]
++ local DEFAULT_THEME_FILE=/home/brandon/git/.configs/git_prompt_deps/themes/Default.bgptheme
++ [[ -z Default ]]
++ [[ Default = \C\u\s\t\o\m ]]
++ local theme=
++ for themefile in '"${__GIT_PROMPT_DIR}/themes/"*.bgptheme'
++ local basename=Default.bgptheme
++ [[ Default = \D\e\f\a\u\l\t ]]
++ theme=Default
++ break
++ [[ Default = '' ]]
++ __GIT_PROMPT_THEME_FILE=/home/brandon/git/.configs/git_prompt_deps/themes/Default.bgptheme
++ local DEFAULT_THEME_FILE=/home/brandon/git/.configs/git_prompt_deps/themes/Default.bgptheme
++ source /home/brandon/git/.configs/git_prompt_deps/themes/Default.bgptheme
+++ [[ Default == \D\e\f\a\u\l\t ]]
+++ [[ Default != \D\e\f\a\u\l\t ]]
++ source /home/brandon/git/.configs/git_prompt_deps/themes/Default.bgptheme
+++ [[ Default == \D\e\f\a\u\l\t ]]
+++ [[ Default != \D\e\f\a\u\l\t ]]
++ is_function prompt_callback
++ declare -Ff prompt_callback
++ prompt_callback=prompt_callback_default
++ [[ 0 = \0 ]]
++ LAST_COMMAND_INDICATOR='\[\033[0;32m\]✔'
+++ gp_format_exit_status 0
+++ local RETVAL=0
+++ local SIGNAL
+++ '[' 0 -gt 128 ']'
+++ echo 0
++ GIT_PROMPT_LAST_COMMAND_STATE=0
++ LAST_COMMAND_INDICATOR='\[\033[0;32m\]✔'
++ [[ -z _LAST_COMMAND_INDICATOR_ \[\033[0;33m\]\w\[\033[0;0m\] ]]
++ [[ -z  \n\[\033[0;37m\]$(date +%H:%M)\[\033[0;0m\] $  ]]
++ [[ '' = 0 ]]
++ PROMPT_LEADING_SPACE=' '
++ [[ '' = 1 ]]
+++ gp_add_virtualenv_to_prompt
+++ local ACCUMULATED_VENV_PROMPT=
+++ local VENV=
+++ [[ -n '' ]]
+++ [[ -n '' ]]
+++ [[ -n '' ]]
+++ echo ''
+++ prompt_callback_default
+++ return
++ local 'ps=_LAST_COMMAND_INDICATOR_ \[\033[0;33m\]\w\[\033[0;0m\] \n\[\033[0;37m\]$(date +%H:%M)\[\033[0;0m\] $ '
++ EMPTY_PROMPT='\[\033[0;32m\]✔ \[\033[0;33m\]\w\[\033[0;0m\] \n\[\033[0;37m\]$(date +%H:%M)\[\033[0;0m\] $ '
++ [[ -z 5 ]]
++ [[ -z '' ]]
++ git_prompt_dir
++ '[' -z /home/brandon/git/.configs/git_prompt_deps ']'
++ gp_maybe_set_envar_to_path __GIT_STATUS_CMD /home/brandon/git/.configs/git_prompt_deps/gitstatus.sh
++ local envar=__GIT_STATUS_CMD
++ shift
++ local file
++ for file in '"$@"'
++ [[ -r /home/brandon/git/.configs/git_prompt_deps/gitstatus.sh ]]
++ eval '__GIT_STATUS_CMD="/home/brandon/git/.configs/git_prompt_deps/gitstatus.sh"'
+++ __GIT_STATUS_CMD=/home/brandon/git/.configs/git_prompt_deps/gitstatus.sh
++ return 0
++ unset GIT_BRANCH
++ [[ ! -e /home/brandon/git/.configs ]]
++ [[ '' = 1 ]]
++ local FETCH_REMOTE_STATUS=1
++ [[ '' = 0 ]]
++ unset GIT_PROMPT_IGNORE
++ OLD_GIT_PROMPT_SHOW_UNTRACKED_FILES=
++ unset GIT_PROMPT_SHOW_UNTRACKED_FILES
++ OLD_GIT_PROMPT_IGNORE_SUBMODULES=
++ unset GIT_PROMPT_IGNORE_SUBMODULES
++ [[ -e /home/brandon/git/.configs/.bash-git-rc ]]
++ '[' -z '' ']'
++ GIT_PROMPT_SHOW_UNTRACKED_FILES=
++ unset OLD_GIT_PROMPT_SHOW_UNTRACKED_FILES
++ '[' -z '' ']'
++ GIT_PROMPT_IGNORE_SUBMODULES=
++ unset OLD_GIT_PROMPT_IGNORE_SUBMODULES
++ [[ '' = 1 ]]
++ [[ 1 = 1 ]]
++ checkUpstream
++ local GIT_PROMPT_FETCH_TIMEOUT
++ git_prompt_config
++ _isroot=false
++ [[ 1000 -eq 0 ]]
++ git_prompt_load_colors
++ gp_set_file_var __PROMPT_COLORS_FILE prompt-colors.sh
++ local envar=__PROMPT_COLORS_FILE
++ local file=prompt-colors.sh
++ eval '[[ -n "$__PROMPT_COLORS_FILE" && -r "$__PROMPT_COLORS_FILE" ]]'
+++ [[ -n /home/brandon/git/.configs/git_prompt_deps/prompt-colors.sh ]]
+++ [[ -r /home/brandon/git/.configs/git_prompt_deps/prompt-colors.sh ]]
++ local basefile
++ eval 'basefile="`basename \"$__PROMPT_COLORS_FILE\"`"'
++++ basename /home/brandon/git/.configs/git_prompt_deps/prompt-colors.sh
+++ basefile=prompt-colors.sh
++ [[ prompt-colors.sh = \p\r\o\m\p\t\-\c\o\l\o\r\s\.\s\h ]]
++ return 0
++ source /home/brandon/git/.configs/git_prompt_deps/prompt-colors.sh
+++ [[ 8 = 0 ]]
+++ [[ -z \[\033[0;90m\] ]]
+++ [[ -z \[\033[0;0m\] ]]
++ git_prompt_load_theme
++ get_theme
++ local CUSTOM_THEME_FILE=/home/brandon/.git-prompt-colors.sh
++ [[ -z '' ]]
++ local DEFAULT_THEME_FILE=/home/brandon/git/.configs/git_prompt_deps/themes/Default.bgptheme
++ [[ -z Default ]]
++ [[ Default = \C\u\s\t\o\m ]]
++ local theme=
++ for themefile in '"${__GIT_PROMPT_DIR}/themes/"*.bgptheme'
++ local basename=Default.bgptheme
++ [[ Default = \D\e\f\a\u\l\t ]]
++ theme=Default
++ break
++ [[ Default = '' ]]
++ __GIT_PROMPT_THEME_FILE=/home/brandon/git/.configs/git_prompt_deps/themes/Default.bgptheme
++ local DEFAULT_THEME_FILE=/home/brandon/git/.configs/git_prompt_deps/themes/Default.bgptheme
++ source /home/brandon/git/.configs/git_prompt_deps/themes/Default.bgptheme
+++ [[ Default == \D\e\f\a\u\l\t ]]
+++ [[ Default != \D\e\f\a\u\l\t ]]
++ source /home/brandon/git/.configs/git_prompt_deps/themes/Default.bgptheme
+++ [[ Default == \D\e\f\a\u\l\t ]]
+++ [[ Default != \D\e\f\a\u\l\t ]]
++ is_function prompt_callback
++ declare -Ff prompt_callback
++ prompt_callback=prompt_callback_default
++ [[ 0 = \0 ]]
++ LAST_COMMAND_INDICATOR='\[\033[0;32m\]✔'
+++ gp_format_exit_status 0
+++ local RETVAL=0
+++ local SIGNAL
+++ '[' 0 -gt 128 ']'
+++ echo 0
++ GIT_PROMPT_LAST_COMMAND_STATE=0
++ LAST_COMMAND_INDICATOR='\[\033[0;32m\]✔'
++ [[ -z _LAST_COMMAND_INDICATOR_ \[\033[0;33m\]\w\[\033[0;0m\] ]]
++ [[ -z  \n\[\033[0;37m\]$(date +%H:%M)\[\033[0;0m\] $  ]]
++ [[ '' = 0 ]]
++ PROMPT_LEADING_SPACE=' '
++ [[ '' = 1 ]]
+++ gp_add_virtualenv_to_prompt
+++ local ACCUMULATED_VENV_PROMPT=
+++ local VENV=
+++ [[ -n '' ]]
+++ [[ -n '' ]]
+++ [[ -n '' ]]
+++ echo ''
+++ prompt_callback_default
+++ return
++ local 'ps=_LAST_COMMAND_INDICATOR_ \[\033[0;33m\]\w\[\033[0;0m\] \n\[\033[0;37m\]$(date +%H:%M)\[\033[0;0m\] $ '
++ EMPTY_PROMPT='\[\033[0;32m\]✔ \[\033[0;33m\]\w\[\033[0;0m\] \n\[\033[0;37m\]$(date +%H:%M)\[\033[0;0m\] $ '
++ [[ -z '' ]]
++ GIT_PROMPT_FETCH_TIMEOUT=5
++ [[ -z /home/brandon/git/.configs/git_prompt_deps/gitstatus.sh ]]
++ unset GIT_BRANCH
++ local FETCH_HEAD=/home/brandon/git/.configs/.git/FETCH_HEAD
++ [[ ! -e /home/brandon/git/.configs/.git/FETCH_HEAD ]]
++ olderThanMinutes /home/brandon/git/.configs/.git/FETCH_HEAD 5
++ local matches
++ local find_exit_code
++ [[ -z find ]]
++ [[ 1 = 1 ]]
+++ find /home/brandon/git/.configs/.git/FETCH_HEAD -mmin +5
++ matches=
++ find_exit_code=0
++ [[ -n '' ]]
++ [[ 0 != 0 ]]
++ return 1
++ updatePrompt
++ local LAST_COMMAND_INDICATOR
++ local PROMPT_LEADING_SPACE
++ local PROMPT_START
++ local PROMPT_END
++ local EMPTY_PROMPT
++ local 'Blue=\[\033[0;34m\]'
++ git_prompt_config
++ _isroot=false
++ [[ 1000 -eq 0 ]]
++ git_prompt_load_colors
++ gp_set_file_var __PROMPT_COLORS_FILE prompt-colors.sh
++ local envar=__PROMPT_COLORS_FILE
++ local file=prompt-colors.sh
++ eval '[[ -n "$__PROMPT_COLORS_FILE" && -r "$__PROMPT_COLORS_FILE" ]]'
+++ [[ -n /home/brandon/git/.configs/git_prompt_deps/prompt-colors.sh ]]
+++ [[ -r /home/brandon/git/.configs/git_prompt_deps/prompt-colors.sh ]]
++ local basefile
++ eval 'basefile="`basename \"$__PROMPT_COLORS_FILE\"`"'
++++ basename /home/brandon/git/.configs/git_prompt_deps/prompt-colors.sh
+++ basefile=prompt-colors.sh
++ [[ prompt-colors.sh = \p\r\o\m\p\t\-\c\o\l\o\r\s\.\s\h ]]
++ return 0
++ source /home/brandon/git/.configs/git_prompt_deps/prompt-colors.sh
+++ [[ 8 = 0 ]]
+++ [[ -z \[\033[0;90m\] ]]
+++ [[ -z \[\033[0;0m\] ]]
++ git_prompt_load_theme
++ get_theme
++ local CUSTOM_THEME_FILE=/home/brandon/.git-prompt-colors.sh
++ [[ -z '' ]]
++ local DEFAULT_THEME_FILE=/home/brandon/git/.configs/git_prompt_deps/themes/Default.bgptheme
++ [[ -z Default ]]
++ [[ Default = \C\u\s\t\o\m ]]
++ local theme=
++ for themefile in '"${__GIT_PROMPT_DIR}/themes/"*.bgptheme'
++ local basename=Default.bgptheme
++ [[ Default = \D\e\f\a\u\l\t ]]
++ theme=Default
++ break
++ [[ Default = '' ]]
++ __GIT_PROMPT_THEME_FILE=/home/brandon/git/.configs/git_prompt_deps/themes/Default.bgptheme
++ local DEFAULT_THEME_FILE=/home/brandon/git/.configs/git_prompt_deps/themes/Default.bgptheme
++ source /home/brandon/git/.configs/git_prompt_deps/themes/Default.bgptheme
+++ [[ Default == \D\e\f\a\u\l\t ]]
+++ [[ Default != \D\e\f\a\u\l\t ]]
++ source /home/brandon/git/.configs/git_prompt_deps/themes/Default.bgptheme
+++ [[ Default == \D\e\f\a\u\l\t ]]
+++ [[ Default != \D\e\f\a\u\l\t ]]
++ is_function prompt_callback
++ declare -Ff prompt_callback
++ prompt_callback=prompt_callback_default
++ [[ 0 = \0 ]]
++ LAST_COMMAND_INDICATOR='\[\033[0;32m\]✔'
+++ gp_format_exit_status 0
+++ local RETVAL=0
+++ local SIGNAL
+++ '[' 0 -gt 128 ']'
+++ echo 0
++ GIT_PROMPT_LAST_COMMAND_STATE=0
++ LAST_COMMAND_INDICATOR='\[\033[0;32m\]✔'
++ [[ -z '' ]]
++ [[ -z '' ]]
++ false
++ PROMPT_START='_LAST_COMMAND_INDICATOR_ \[\033[0;33m\]\w\[\033[0;0m\]'
++ [[ -z '' ]]
++ false
++ PROMPT_END=' \n\[\033[0;37m\]$(date +%H:%M)\[\033[0;0m\] $ '
++ [[ '' = 0 ]]
++ PROMPT_LEADING_SPACE=' '
++ [[ '' = 1 ]]
+++ gp_add_virtualenv_to_prompt
+++ local ACCUMULATED_VENV_PROMPT=
+++ local VENV=
+++ [[ -n '' ]]
+++ [[ -n '' ]]
+++ [[ -n '' ]]
+++ echo ''
+++ prompt_callback_default
+++ return
++ local 'ps=_LAST_COMMAND_INDICATOR_ \[\033[0;33m\]\w\[\033[0;0m\] \n\[\033[0;37m\]$(date +%H:%M)\[\033[0;0m\] $ '
++ EMPTY_PROMPT='\[\033[0;32m\]✔ \[\033[0;33m\]\w\[\033[0;0m\] \n\[\033[0;37m\]$(date +%H:%M)\[\033[0;0m\] $ '
++ [[ -z 5 ]]
++ [[ -z /home/brandon/git/.configs/git_prompt_deps/gitstatus.sh ]]
++ unset GIT_BRANCH
++ export __GIT_PROMPT_IGNORE_STASH=
++ __GIT_PROMPT_IGNORE_STASH=
++ export __GIT_PROMPT_SHOW_UPSTREAM=
++ __GIT_PROMPT_SHOW_UPSTREAM=
++ export __GIT_PROMPT_IGNORE_SUBMODULES=
++ __GIT_PROMPT_IGNORE_SUBMODULES=
++ '[' -z '' ']'
++ export __GIT_PROMPT_SHOW_UNTRACKED_FILES=all
++ __GIT_PROMPT_SHOW_UNTRACKED_FILES=all
++ '[' -z '' ']'
++ export __GIT_PROMPT_SHOW_CHANGED_FILES_COUNT=1
++ __GIT_PROMPT_SHOW_CHANGED_FILES_COUNT=1
+++ createPrivateIndex
+++ local __GIT_INDEX_FILE
+++ local __GIT_INDEX_PRIVATE
+++ [[ -z '' ]]
++++ git rev-parse --git-dir
+++ __GIT_INDEX_FILE=/home/brandon/git/.configs/.git/index
+++ __GIT_INDEX_PRIVATE=/tmp/git-index-private21615
+++ command cp /home/brandon/git/.configs/.git/index /tmp/git-index-private21615
+++ echo /tmp/git-index-private21615
++ local GIT_INDEX_PRIVATE=/tmp/git-index-private21615
++ local GIT_INDEX_FILE
++ export GIT_INDEX_FILE=/tmp/git-index-private21615
++ GIT_INDEX_FILE=/tmp/git-index-private21615
++ local -a git_status_fields
++ git_status_fields=($("$__GIT_STATUS_CMD" 2>/dev/null))
+++ /home/brandon/git/.configs/git_prompt_deps/gitstatus.sh
+++ replaceSymbols master
+++ set -f
+++ [[ -z L ]]
+++ local VALUE=master
+++ local VALUE1=master
+++ local VALUE2=master
+++ echo master
+++ set +f
++ export GIT_BRANCH=master
++ GIT_BRANCH=master
+++ replaceSymbols .
+++ set -f
+++ [[ -z L ]]
+++ local VALUE=.
+++ local VALUE1=.
+++ local VALUE2=.
+++ echo .
+++ set +f
++ local GIT_REMOTE=.
++ [[ . == \. ]]
++ unset GIT_REMOTE
++ local GIT_UPSTREAM_PRIVATE=origin/master
++ [[ -z '' ]]
++ unset GIT_UPSTREAM
++ local GIT_STAGED=0
++ local GIT_CONFLICTS=0
++ local GIT_CHANGED=0
++ local GIT_UNTRACKED=0
++ local GIT_STASHED=0
++ local GIT_CLEAN=1
++ local 'NEW_PROMPT=\[\033[0;32m\]✔ \[\033[0;33m\]\w\[\033[0;0m\] \n\[\033[0;37m\]$(date +%H:%M)\[\033[0;0m\] $ '
++ [[ -n master ]]
++ case "$GIT_BRANCH" in
++ local 'STATUS_PREFIX= [\[\033[0;35m\]${GIT_BRANCH}\[\033[0;0m\]'
++ local STATUS=
++ __chk_gitvar_status REMOTE -n
++ local v
++ [[ x-n == \x\-\n ]]
++ v='-n "$GIT_REMOTE"'
++ eval 'test -n "$GIT_REMOTE"'
+++ test -n ''
++ [[ 1 -eq 0 ]]
++ [[ \[\033[1;32m\]✔ != '' ]]
++ __add_status '|'
++ eval 'STATUS="|"'
+++ STATUS='|'
++ __chk_gitvar_status STAGED '!= "0" -a $GIT_STAGED != "^"'
++ local v
++ [[ x!= "0" -a $GIT_STAGED != "^" == \x\-\n ]]
++ v='$GIT_STAGED != "0" -a $GIT_STAGED != "^"'
++ eval 'test $GIT_STAGED != "0" -a $GIT_STAGED != "^"'
+++ test 0 '!=' 0 -a 0 '!=' '^'
++ __chk_gitvar_status CONFLICTS '!= "0"'
++ local v
++ [[ x!= "0" == \x\-\n ]]
++ v='$GIT_CONFLICTS != "0"'
++ eval 'test $GIT_CONFLICTS != "0"'
+++ test 0 '!=' 0
++ __chk_gitvar_status CHANGED '!= "0"'
++ local v
++ [[ x!= "0" == \x\-\n ]]
++ v='$GIT_CHANGED != "0"'
++ eval 'test $GIT_CHANGED != "0"'
+++ test 0 '!=' 0
++ __chk_gitvar_status UNTRACKED '!= "0"'
++ local v
++ [[ x!= "0" == \x\-\n ]]
++ v='$GIT_UNTRACKED != "0"'
++ eval 'test $GIT_UNTRACKED != "0"'
+++ test 0 '!=' 0
++ __chk_gitvar_status STASHED '!= "0"'
++ local v
++ [[ x!= "0" == \x\-\n ]]
++ v='$GIT_STASHED != "0"'
++ eval 'test $GIT_STASHED != "0"'
+++ test 0 '!=' 0
++ __chk_gitvar_status CLEAN '= "1"' -
++ local v
++ [[ x= "1" == \x\-\n ]]
++ v='$GIT_CLEAN = "1"'
++ eval 'test $GIT_CLEAN = "1"'
+++ test 1 = 1
++ [[ 3 -lt 2 ]]
++ [[ - != \- ]]
++ __add_status '$GIT_PROMPT_CLEAN$ResetColor'
++ eval 'STATUS="|$GIT_PROMPT_CLEAN$ResetColor"'
+++ STATUS='|\[\033[1;32m\]✔\[\033[0;0m\]'
++ __add_status '\[\033[0;0m\]]'
++ eval 'STATUS="|\[\033[1;32m\]✔\[\033[0;0m\]\[\033[0;0m\]]"'
+++ STATUS='|\[\033[1;32m\]✔\[\033[0;0m\]\[\033[0;0m\]]'
+++ gp_add_virtualenv_to_prompt
+++ local ACCUMULATED_VENV_PROMPT=
+++ local VENV=
+++ [[ -n '' ]]
+++ [[ -n '' ]]
+++ [[ -n '' ]]
+++ echo ''
+++ prompt_callback_default
+++ return
++ NEW_PROMPT='_LAST_COMMAND_INDICATOR_ \[\033[0;33m\]\w\[\033[0;0m\] [\[\033[0;35m\]${GIT_BRANCH}\[\033[0;0m\]|\[\033[1;32m\]✔\[\033[0;0m\]\[\033[0;0m\]] \n\[\033[0;37m\]$(date +%H:%M)\[\033[0;0m\] $ '
++ command rm /tmp/git-index-private21615

